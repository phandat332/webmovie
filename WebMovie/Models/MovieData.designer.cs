#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebMovie.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Movie")]
	public partial class MovieDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertKHACHHANG(KHACHHANG instance);
    partial void UpdateKHACHHANG(KHACHHANG instance);
    partial void DeleteKHACHHANG(KHACHHANG instance);
    partial void InsertNAMPHATHANH(NAMPHATHANH instance);
    partial void UpdateNAMPHATHANH(NAMPHATHANH instance);
    partial void DeleteNAMPHATHANH(NAMPHATHANH instance);
    partial void InsertPHIMTHELOAI(PHIMTHELOAI instance);
    partial void UpdatePHIMTHELOAI(PHIMTHELOAI instance);
    partial void DeletePHIMTHELOAI(PHIMTHELOAI instance);
    partial void InsertQUOCGIA(QUOCGIA instance);
    partial void UpdateQUOCGIA(QUOCGIA instance);
    partial void DeleteQUOCGIA(QUOCGIA instance);
    partial void InsertQUYEN(QUYEN instance);
    partial void UpdateQUYEN(QUYEN instance);
    partial void DeleteQUYEN(QUYEN instance);
    partial void InsertTHELOAI(THELOAI instance);
    partial void UpdateTHELOAI(THELOAI instance);
    partial void DeleteTHELOAI(THELOAI instance);
    partial void InsertPHIM(PHIM instance);
    partial void UpdatePHIM(PHIM instance);
    partial void DeletePHIM(PHIM instance);
    #endregion
		
		public MovieDataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MovieConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MovieDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MovieDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this.GetTable<KHACHHANG>();
			}
		}
		
		public System.Data.Linq.Table<NAMPHATHANH> NAMPHATHANHs
		{
			get
			{
				return this.GetTable<NAMPHATHANH>();
			}
		}
		
		public System.Data.Linq.Table<PHIMTHELOAI> PHIMTHELOAIs
		{
			get
			{
				return this.GetTable<PHIMTHELOAI>();
			}
		}
		
		public System.Data.Linq.Table<QUOCGIA> QUOCGIAs
		{
			get
			{
				return this.GetTable<QUOCGIA>();
			}
		}
		
		public System.Data.Linq.Table<QUYEN> QUYENs
		{
			get
			{
				return this.GetTable<QUYEN>();
			}
		}
		
		public System.Data.Linq.Table<THELOAI> THELOAIs
		{
			get
			{
				return this.GetTable<THELOAI>();
			}
		}
		
		public System.Data.Linq.Table<PHIM> PHIMs
		{
			get
			{
				return this.GetTable<PHIM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KHACHHANG")]
	public partial class KHACHHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaKh;
		
		private string _Taikhoan;
		
		private string _Matkhau;
		
		private string _Email;
		
		private string _DienthoaiKh;
		
		private System.Nullable<int> _MaQuyen;
		
		private string _Hoten;
		
		private EntityRef<QUYEN> _QUYEN;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaKhChanging(int value);
    partial void OnMaKhChanged();
    partial void OnTaikhoanChanging(string value);
    partial void OnTaikhoanChanged();
    partial void OnMatkhauChanging(string value);
    partial void OnMatkhauChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnDienthoaiKhChanging(string value);
    partial void OnDienthoaiKhChanged();
    partial void OnMaQuyenChanging(System.Nullable<int> value);
    partial void OnMaQuyenChanged();
    partial void OnHotenChanging(string value);
    partial void OnHotenChanged();
    #endregion
		
		public KHACHHANG()
		{
			this._QUYEN = default(EntityRef<QUYEN>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaKh", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaKh
		{
			get
			{
				return this._MaKh;
			}
			set
			{
				if ((this._MaKh != value))
				{
					this.OnMaKhChanging(value);
					this.SendPropertyChanging();
					this._MaKh = value;
					this.SendPropertyChanged("MaKh");
					this.OnMaKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Taikhoan", DbType="VarChar(50)")]
		public string Taikhoan
		{
			get
			{
				return this._Taikhoan;
			}
			set
			{
				if ((this._Taikhoan != value))
				{
					this.OnTaikhoanChanging(value);
					this.SendPropertyChanging();
					this._Taikhoan = value;
					this.SendPropertyChanged("Taikhoan");
					this.OnTaikhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matkhau", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Matkhau
		{
			get
			{
				return this._Matkhau;
			}
			set
			{
				if ((this._Matkhau != value))
				{
					this.OnMatkhauChanging(value);
					this.SendPropertyChanging();
					this._Matkhau = value;
					this.SendPropertyChanged("Matkhau");
					this.OnMatkhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DienthoaiKh", DbType="VarChar(50)")]
		public string DienthoaiKh
		{
			get
			{
				return this._DienthoaiKh;
			}
			set
			{
				if ((this._DienthoaiKh != value))
				{
					this.OnDienthoaiKhChanging(value);
					this.SendPropertyChanging();
					this._DienthoaiKh = value;
					this.SendPropertyChanged("DienthoaiKh");
					this.OnDienthoaiKhChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int")]
		public System.Nullable<int> MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					if (this._QUYEN.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Hoten", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Hoten
		{
			get
			{
				return this._Hoten;
			}
			set
			{
				if ((this._Hoten != value))
				{
					this.OnHotenChanging(value);
					this.SendPropertyChanging();
					this._Hoten = value;
					this.SendPropertyChanged("Hoten");
					this.OnHotenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_KHACHHANG", Storage="_QUYEN", ThisKey="MaQuyen", OtherKey="MaQuyen", IsForeignKey=true)]
		public QUYEN QUYEN
		{
			get
			{
				return this._QUYEN.Entity;
			}
			set
			{
				QUYEN previousValue = this._QUYEN.Entity;
				if (((previousValue != value) 
							|| (this._QUYEN.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUYEN.Entity = null;
						previousValue.KHACHHANGs.Remove(this);
					}
					this._QUYEN.Entity = value;
					if ((value != null))
					{
						value.KHACHHANGs.Add(this);
						this._MaQuyen = value.MaQuyen;
					}
					else
					{
						this._MaQuyen = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUYEN");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NAMPHATHANH")]
	public partial class NAMPHATHANH : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaNam;
		
		private string _Nam;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaNamChanging(int value);
    partial void OnMaNamChanged();
    partial void OnNamChanging(string value);
    partial void OnNamChanged();
    #endregion
		
		public NAMPHATHANH()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNam", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaNam
		{
			get
			{
				return this._MaNam;
			}
			set
			{
				if ((this._MaNam != value))
				{
					this.OnMaNamChanging(value);
					this.SendPropertyChanging();
					this._MaNam = value;
					this.SendPropertyChanged("MaNam");
					this.OnMaNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nam", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string Nam
		{
			get
			{
				return this._Nam;
			}
			set
			{
				if ((this._Nam != value))
				{
					this.OnNamChanging(value);
					this.SendPropertyChanging();
					this._Nam = value;
					this.SendPropertyChanged("Nam");
					this.OnNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMPHATHANH_PHIM", Storage="_PHIMs", ThisKey="MaNam", OtherKey="MaNam")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NAMPHATHANH = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.NAMPHATHANH = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIMTHELOAI")]
	public partial class PHIMTHELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphim;
		
		private int _MaTL;
		
		private EntityRef<THELOAI> _THELOAI;
		
		private EntityRef<PHIM> _PHIM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphimChanging(int value);
    partial void OnMaphimChanged();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    #endregion
		
		public PHIMTHELOAI()
		{
			this._THELOAI = default(EntityRef<THELOAI>);
			this._PHIM = default(EntityRef<PHIM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					if (this._PHIM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaphimChanging(value);
					this.SendPropertyChanging();
					this._Maphim = value;
					this.SendPropertyChanged("Maphim");
					this.OnMaphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					if (this._THELOAI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_PHIMTHELOAI", Storage="_THELOAI", ThisKey="MaTL", OtherKey="MaTL", IsForeignKey=true)]
		public THELOAI THELOAI
		{
			get
			{
				return this._THELOAI.Entity;
			}
			set
			{
				THELOAI previousValue = this._THELOAI.Entity;
				if (((previousValue != value) 
							|| (this._THELOAI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._THELOAI.Entity = null;
						previousValue.PHIMTHELOAIs.Remove(this);
					}
					this._THELOAI.Entity = value;
					if ((value != null))
					{
						value.PHIMTHELOAIs.Add(this);
						this._MaTL = value.MaTL;
					}
					else
					{
						this._MaTL = default(int);
					}
					this.SendPropertyChanged("THELOAI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMTHELOAI", Storage="_PHIM", ThisKey="Maphim", OtherKey="Maphim", IsForeignKey=true)]
		public PHIM PHIM
		{
			get
			{
				return this._PHIM.Entity;
			}
			set
			{
				PHIM previousValue = this._PHIM.Entity;
				if (((previousValue != value) 
							|| (this._PHIM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PHIM.Entity = null;
						previousValue.PHIMTHELOAIs.Remove(this);
					}
					this._PHIM.Entity = value;
					if ((value != null))
					{
						value.PHIMTHELOAIs.Add(this);
						this._Maphim = value.Maphim;
					}
					else
					{
						this._Maphim = default(int);
					}
					this.SendPropertyChanged("PHIM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUOCGIA")]
	public partial class QUOCGIA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQG;
		
		private string _TenQG;
		
		private EntitySet<PHIM> _PHIMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQGChanging(int value);
    partial void OnMaQGChanged();
    partial void OnTenQGChanging(string value);
    partial void OnTenQGChanged();
    #endregion
		
		public QUOCGIA()
		{
			this._PHIMs = new EntitySet<PHIM>(new Action<PHIM>(this.attach_PHIMs), new Action<PHIM>(this.detach_PHIMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQG", DbType="NVarChar(50)")]
		public string TenQG
		{
			get
			{
				return this._TenQG;
			}
			set
			{
				if ((this._TenQG != value))
				{
					this.OnTenQGChanging(value);
					this.SendPropertyChanging();
					this._TenQG = value;
					this.SendPropertyChanged("TenQG");
					this.OnTenQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUOCGIA_PHIM", Storage="_PHIMs", ThisKey="MaQG", OtherKey="MaQG")]
		public EntitySet<PHIM> PHIMs
		{
			get
			{
				return this._PHIMs;
			}
			set
			{
				this._PHIMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.QUOCGIA = this;
		}
		
		private void detach_PHIMs(PHIM entity)
		{
			this.SendPropertyChanging();
			entity.QUOCGIA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.QUYEN")]
	public partial class QUYEN : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaQuyen;
		
		private string _TenQuyen;
		
		private EntitySet<KHACHHANG> _KHACHHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaQuyenChanging(int value);
    partial void OnMaQuyenChanged();
    partial void OnTenQuyenChanging(string value);
    partial void OnTenQuyenChanged();
    #endregion
		
		public QUYEN()
		{
			this._KHACHHANGs = new EntitySet<KHACHHANG>(new Action<KHACHHANG>(this.attach_KHACHHANGs), new Action<KHACHHANG>(this.detach_KHACHHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQuyen", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int MaQuyen
		{
			get
			{
				return this._MaQuyen;
			}
			set
			{
				if ((this._MaQuyen != value))
				{
					this.OnMaQuyenChanging(value);
					this.SendPropertyChanging();
					this._MaQuyen = value;
					this.SendPropertyChanged("MaQuyen");
					this.OnMaQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenQuyen", DbType="Char(10)")]
		public string TenQuyen
		{
			get
			{
				return this._TenQuyen;
			}
			set
			{
				if ((this._TenQuyen != value))
				{
					this.OnTenQuyenChanging(value);
					this.SendPropertyChanging();
					this._TenQuyen = value;
					this.SendPropertyChanged("TenQuyen");
					this.OnTenQuyenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUYEN_KHACHHANG", Storage="_KHACHHANGs", ThisKey="MaQuyen", OtherKey="MaQuyen")]
		public EntitySet<KHACHHANG> KHACHHANGs
		{
			get
			{
				return this._KHACHHANGs;
			}
			set
			{
				this._KHACHHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = this;
		}
		
		private void detach_KHACHHANGs(KHACHHANG entity)
		{
			this.SendPropertyChanging();
			entity.QUYEN = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.THELOAI")]
	public partial class THELOAI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _MaTL;
		
		private string _TenTL;
		
		private EntitySet<PHIMTHELOAI> _PHIMTHELOAIs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaTLChanging(int value);
    partial void OnMaTLChanged();
    partial void OnTenTLChanging(string value);
    partial void OnTenTLChanged();
    #endregion
		
		public THELOAI()
		{
			this._PHIMTHELOAIs = new EntitySet<PHIMTHELOAI>(new Action<PHIMTHELOAI>(this.attach_PHIMTHELOAIs), new Action<PHIMTHELOAI>(this.detach_PHIMTHELOAIs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaTL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int MaTL
		{
			get
			{
				return this._MaTL;
			}
			set
			{
				if ((this._MaTL != value))
				{
					this.OnMaTLChanging(value);
					this.SendPropertyChanging();
					this._MaTL = value;
					this.SendPropertyChanged("MaTL");
					this.OnMaTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTL", DbType="NVarChar(50)")]
		public string TenTL
		{
			get
			{
				return this._TenTL;
			}
			set
			{
				if ((this._TenTL != value))
				{
					this.OnTenTLChanging(value);
					this.SendPropertyChanging();
					this._TenTL = value;
					this.SendPropertyChanged("TenTL");
					this.OnTenTLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="THELOAI_PHIMTHELOAI", Storage="_PHIMTHELOAIs", ThisKey="MaTL", OtherKey="MaTL")]
		public EntitySet<PHIMTHELOAI> PHIMTHELOAIs
		{
			get
			{
				return this._PHIMTHELOAIs;
			}
			set
			{
				this._PHIMTHELOAIs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMTHELOAIs(PHIMTHELOAI entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = this;
		}
		
		private void detach_PHIMTHELOAIs(PHIMTHELOAI entity)
		{
			this.SendPropertyChanging();
			entity.THELOAI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PHIM")]
	public partial class PHIM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Maphim;
		
		private string _TenPhim;
		
		private string _Daodien;
		
		private string _Dienvien;
		
		private string _Noidung;
		
		private string _Dotuoi;
		
		private string _Thoiluong;
		
		private string _Ngonngu;
		
		private string _Linkphim;
		
		private string _Trailer;
		
		private System.Nullable<int> _MaNam;
		
		private System.Nullable<int> _MaQG;
		
		private string _Anhbia;
		
		private System.Nullable<bool> _Phimbo;
		
		private System.Nullable<int> _Phanphim;
		
		private System.Nullable<int> _Tapphim;
		
		private EntitySet<PHIMTHELOAI> _PHIMTHELOAIs;
		
		private EntityRef<NAMPHATHANH> _NAMPHATHANH;
		
		private EntityRef<QUOCGIA> _QUOCGIA;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMaphimChanging(int value);
    partial void OnMaphimChanged();
    partial void OnTenPhimChanging(string value);
    partial void OnTenPhimChanged();
    partial void OnDaodienChanging(string value);
    partial void OnDaodienChanged();
    partial void OnDienvienChanging(string value);
    partial void OnDienvienChanged();
    partial void OnNoidungChanging(string value);
    partial void OnNoidungChanged();
    partial void OnDotuoiChanging(string value);
    partial void OnDotuoiChanged();
    partial void OnThoiluongChanging(string value);
    partial void OnThoiluongChanged();
    partial void OnNgonnguChanging(string value);
    partial void OnNgonnguChanged();
    partial void OnLinkphimChanging(string value);
    partial void OnLinkphimChanged();
    partial void OnTrailerChanging(string value);
    partial void OnTrailerChanged();
    partial void OnMaNamChanging(System.Nullable<int> value);
    partial void OnMaNamChanged();
    partial void OnMaQGChanging(System.Nullable<int> value);
    partial void OnMaQGChanged();
    partial void OnAnhbiaChanging(string value);
    partial void OnAnhbiaChanged();
    partial void OnPhimboChanging(System.Nullable<bool> value);
    partial void OnPhimboChanged();
    partial void OnPhanphimChanging(System.Nullable<int> value);
    partial void OnPhanphimChanged();
    partial void OnTapphimChanging(System.Nullable<int> value);
    partial void OnTapphimChanged();
    #endregion
		
		public PHIM()
		{
			this._PHIMTHELOAIs = new EntitySet<PHIMTHELOAI>(new Action<PHIMTHELOAI>(this.attach_PHIMTHELOAIs), new Action<PHIMTHELOAI>(this.detach_PHIMTHELOAIs));
			this._NAMPHATHANH = default(EntityRef<NAMPHATHANH>);
			this._QUOCGIA = default(EntityRef<QUOCGIA>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Maphim", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Maphim
		{
			get
			{
				return this._Maphim;
			}
			set
			{
				if ((this._Maphim != value))
				{
					this.OnMaphimChanging(value);
					this.SendPropertyChanging();
					this._Maphim = value;
					this.SendPropertyChanged("Maphim");
					this.OnMaphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenPhim", DbType="NVarChar(100)")]
		public string TenPhim
		{
			get
			{
				return this._TenPhim;
			}
			set
			{
				if ((this._TenPhim != value))
				{
					this.OnTenPhimChanging(value);
					this.SendPropertyChanging();
					this._TenPhim = value;
					this.SendPropertyChanged("TenPhim");
					this.OnTenPhimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Daodien", DbType="NVarChar(50)")]
		public string Daodien
		{
			get
			{
				return this._Daodien;
			}
			set
			{
				if ((this._Daodien != value))
				{
					this.OnDaodienChanging(value);
					this.SendPropertyChanging();
					this._Daodien = value;
					this.SendPropertyChanged("Daodien");
					this.OnDaodienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dienvien", DbType="NVarChar(200)")]
		public string Dienvien
		{
			get
			{
				return this._Dienvien;
			}
			set
			{
				if ((this._Dienvien != value))
				{
					this.OnDienvienChanging(value);
					this.SendPropertyChanging();
					this._Dienvien = value;
					this.SendPropertyChanged("Dienvien");
					this.OnDienvienChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Noidung", DbType="NVarChar(MAX)")]
		public string Noidung
		{
			get
			{
				return this._Noidung;
			}
			set
			{
				if ((this._Noidung != value))
				{
					this.OnNoidungChanging(value);
					this.SendPropertyChanging();
					this._Noidung = value;
					this.SendPropertyChanged("Noidung");
					this.OnNoidungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dotuoi", DbType="Char(10)")]
		public string Dotuoi
		{
			get
			{
				return this._Dotuoi;
			}
			set
			{
				if ((this._Dotuoi != value))
				{
					this.OnDotuoiChanging(value);
					this.SendPropertyChanging();
					this._Dotuoi = value;
					this.SendPropertyChanged("Dotuoi");
					this.OnDotuoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Thoiluong", DbType="NVarChar(20)")]
		public string Thoiluong
		{
			get
			{
				return this._Thoiluong;
			}
			set
			{
				if ((this._Thoiluong != value))
				{
					this.OnThoiluongChanging(value);
					this.SendPropertyChanging();
					this._Thoiluong = value;
					this.SendPropertyChanged("Thoiluong");
					this.OnThoiluongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ngonngu", DbType="NVarChar(50)")]
		public string Ngonngu
		{
			get
			{
				return this._Ngonngu;
			}
			set
			{
				if ((this._Ngonngu != value))
				{
					this.OnNgonnguChanging(value);
					this.SendPropertyChanging();
					this._Ngonngu = value;
					this.SendPropertyChanged("Ngonngu");
					this.OnNgonnguChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Linkphim", DbType="NVarChar(200)")]
		public string Linkphim
		{
			get
			{
				return this._Linkphim;
			}
			set
			{
				if ((this._Linkphim != value))
				{
					this.OnLinkphimChanging(value);
					this.SendPropertyChanging();
					this._Linkphim = value;
					this.SendPropertyChanged("Linkphim");
					this.OnLinkphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Trailer", DbType="NVarChar(200)")]
		public string Trailer
		{
			get
			{
				return this._Trailer;
			}
			set
			{
				if ((this._Trailer != value))
				{
					this.OnTrailerChanging(value);
					this.SendPropertyChanging();
					this._Trailer = value;
					this.SendPropertyChanged("Trailer");
					this.OnTrailerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaNam", DbType="Int")]
		public System.Nullable<int> MaNam
		{
			get
			{
				return this._MaNam;
			}
			set
			{
				if ((this._MaNam != value))
				{
					if (this._NAMPHATHANH.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaNamChanging(value);
					this.SendPropertyChanging();
					this._MaNam = value;
					this.SendPropertyChanged("MaNam");
					this.OnMaNamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaQG", DbType="Int")]
		public System.Nullable<int> MaQG
		{
			get
			{
				return this._MaQG;
			}
			set
			{
				if ((this._MaQG != value))
				{
					if (this._QUOCGIA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMaQGChanging(value);
					this.SendPropertyChanging();
					this._MaQG = value;
					this.SendPropertyChanged("MaQG");
					this.OnMaQGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Anhbia", DbType="VarChar(50)")]
		public string Anhbia
		{
			get
			{
				return this._Anhbia;
			}
			set
			{
				if ((this._Anhbia != value))
				{
					this.OnAnhbiaChanging(value);
					this.SendPropertyChanging();
					this._Anhbia = value;
					this.SendPropertyChanged("Anhbia");
					this.OnAnhbiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phimbo", DbType="Bit")]
		public System.Nullable<bool> Phimbo
		{
			get
			{
				return this._Phimbo;
			}
			set
			{
				if ((this._Phimbo != value))
				{
					this.OnPhimboChanging(value);
					this.SendPropertyChanging();
					this._Phimbo = value;
					this.SendPropertyChanged("Phimbo");
					this.OnPhimboChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phanphim", DbType="Int")]
		public System.Nullable<int> Phanphim
		{
			get
			{
				return this._Phanphim;
			}
			set
			{
				if ((this._Phanphim != value))
				{
					this.OnPhanphimChanging(value);
					this.SendPropertyChanging();
					this._Phanphim = value;
					this.SendPropertyChanged("Phanphim");
					this.OnPhanphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tapphim", DbType="Int")]
		public System.Nullable<int> Tapphim
		{
			get
			{
				return this._Tapphim;
			}
			set
			{
				if ((this._Tapphim != value))
				{
					this.OnTapphimChanging(value);
					this.SendPropertyChanging();
					this._Tapphim = value;
					this.SendPropertyChanged("Tapphim");
					this.OnTapphimChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PHIM_PHIMTHELOAI", Storage="_PHIMTHELOAIs", ThisKey="Maphim", OtherKey="Maphim")]
		public EntitySet<PHIMTHELOAI> PHIMTHELOAIs
		{
			get
			{
				return this._PHIMTHELOAIs;
			}
			set
			{
				this._PHIMTHELOAIs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="NAMPHATHANH_PHIM", Storage="_NAMPHATHANH", ThisKey="MaNam", OtherKey="MaNam", IsForeignKey=true)]
		public NAMPHATHANH NAMPHATHANH
		{
			get
			{
				return this._NAMPHATHANH.Entity;
			}
			set
			{
				NAMPHATHANH previousValue = this._NAMPHATHANH.Entity;
				if (((previousValue != value) 
							|| (this._NAMPHATHANH.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._NAMPHATHANH.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._NAMPHATHANH.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._MaNam = value.MaNam;
					}
					else
					{
						this._MaNam = default(Nullable<int>);
					}
					this.SendPropertyChanged("NAMPHATHANH");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="QUOCGIA_PHIM", Storage="_QUOCGIA", ThisKey="MaQG", OtherKey="MaQG", IsForeignKey=true)]
		public QUOCGIA QUOCGIA
		{
			get
			{
				return this._QUOCGIA.Entity;
			}
			set
			{
				QUOCGIA previousValue = this._QUOCGIA.Entity;
				if (((previousValue != value) 
							|| (this._QUOCGIA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._QUOCGIA.Entity = null;
						previousValue.PHIMs.Remove(this);
					}
					this._QUOCGIA.Entity = value;
					if ((value != null))
					{
						value.PHIMs.Add(this);
						this._MaQG = value.MaQG;
					}
					else
					{
						this._MaQG = default(Nullable<int>);
					}
					this.SendPropertyChanged("QUOCGIA");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PHIMTHELOAIs(PHIMTHELOAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = this;
		}
		
		private void detach_PHIMTHELOAIs(PHIMTHELOAI entity)
		{
			this.SendPropertyChanging();
			entity.PHIM = null;
		}
	}
}
#pragma warning restore 1591
